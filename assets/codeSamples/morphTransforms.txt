import sys
import cv2
import numpy as np


## ------------ ALL MORPHOLOGICAL FILTERS ------------- ##




def dilate(self):
    self.filterFlag = 0
    print('Running Dilate')
    self.lastFilter = 'dilate'
    self.initializeSlider()
    self.processedImage = self.originalImage.copy()
    kernel = np.ones((self.slider.value(), self.slider.value()), np.uint8)
    self.processedImage = cv2.dilate(self.processedImage, kernel, iterations=1)
    self.displayImage(2)


def erode(self):
    self.filterFlag = 0
    print('Running Erode')
    self.lastFilter = 'erode'
    self.initializeSlider()
    self.processedImage = self.originalImage.copy()
    kernel = np.ones((5, 5), np.uint8)
    self.processedImage = cv2.erode(self.processedImage, kernel, iterations=1)
    self.displayImage(2)


def opening(self):
    self.filterFlag = 0
    print('Running Opening')
    self.lastFilter = 'opening'
    self.initializeSlider()
    self.processedImage = self.originalImage.copy()
    kernel = np.ones((self.slider.value(), self.slider.value()), np.uint8)
    self.processedImage = cv2.morphologyEx(self.processedImage, cv2.MORPH_OPEN, kernel)
    self.displayImage(2)


def closing(self):
    self.filterFlag = 0
    print('Running Closing')
    self.lastFilter = 'closing'
    self.initializeSlider()

    self.processedImage = self.originalImage.copy()
    kernel = np.ones((self.slider.value(), self.slider.value()), np.uint8)
    self.processedImage = cv2.morphologyEx(self.processedImage, cv2.MORPH_CLOSE, kernel)
    self.displayImage(2)


def morphGradient(self):
    self.filterFlag = 0
    print('Running MorphGradient')
    self.lastFilter = 'morphGradient'
    self.initializeSlider()

    self.processedImage = self.originalImage.copy()
    kernel = np.ones((self.slider.value(), self.slider.value()), np.uint8)
    self.processedImage = cv2.morphologyEx(self.processedImage, cv2.MORPH_GRADIENT, kernel)
    self.displayImage(2)


def topHat(self):
    self.filterFlag = 0
    print('Running Top Hat')
    self.lastFilter = 'topHat'
    self.initializeSlider()
    self.processedImage = self.originalImage.copy()
    kernel = np.ones((self.slider.value(), self.slider.value()), np.uint8)
    self.processedImage = cv2.morphologyEx(self.processedImage, cv2.MORPH_TOPHAT, kernel)
    self.displayImage(2)


def blackHat(self):
    self.filterFlag = 0
    print('Running Black Hat')
    self.lastFilter = 'blackHat'
    self.initializeSlider()
    self.processedImage = self.originalImage.copy()
    kernel = np.ones((self.slider.value(), self.slider.value()), np.uint8)
    self.processedImage = cv2.morphologyEx(self.processedImage, cv2.MORPH_BLACKHAT, kernel)
    self.displayImage(2)


functions = (dilate , erode , opening , closing , morphGradient , topHat , blackHat )

